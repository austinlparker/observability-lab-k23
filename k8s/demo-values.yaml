components:
  frontendProxy:
    service:
      type: LoadBalancer

opentelemetry-collector:
  nameOverride: otelcol
  mode: deployment
  resources:
    limits:
      memory: 100Mi
  config:
    exporters:
      otlp/ls:
        endpoint: kube-otel-stack-traces-collector:4317
      logging:
        loglevel: error
      elasticsearch: 
        endpoints: [https://logingest.lightstep.com:443]
        index: "lightstep"
        headers:
          lightstep-access-token: ${LS_TOKEN}

    processors:
      transform:
        metric_statements:
          - context: metric
            statements:
              - set(description, "Measures the duration of inbound HTTP requests") where name == "http.server.duration"
      filter:
        metrics:
          exclude:
            match_type: strict
            metric_names:
              - queueSize
      resource:
        attributes:
        - key: service
          from_attribute: service.name
          action: insert
      resource/add_container:
        attributes:
        - key: container
          from_attribute: service.name
          action: insert

    service:
      pipelines:
        traces:
          receivers: [otlp, otlp/ls]
          processors: [resource, resource/add_container, batch]
          exporters: [otlp, logging, spanmetrics]
        metrics:
          receivers: [otlp, spanmetrics]
          processors: [resource, filter, transform, batch]
          exporters: [otlp/metrics, logging]